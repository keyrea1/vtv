# -*- coding: utf-8 -*-
"""
    vtv-shell.models module
    ~~~~~~~~~~~~~~~~~~~~~~~~
    This module contains objects definitions for ORM
    v.0.0.1
    :copyright: (c) 2018 ZVO
"""

from datetime import date
from datetime import datetime
from datetime import time
from pony.orm import *

db = Database()


class Calculation(db.Entity):
    id = PrimaryKey(int, auto=True)
    write_date = Optional(date)
    write_time = Optional(time)
    direction = Optional(bool, nullable=True)
    wagon_number = Optional(int)
    start_weight = Optional(float)
    doc_start_weight = Optional(float)
    brutto = Optional(float)
    cargo_weight = Optional(float)
    doc_cargo_weight = Optional(float)
    doc_number = Optional(str)
    doc_date = Optional(date, nullable=True)
    cargo_name = Optional(str)
    capacity = Optional(int)
    truck1_weight = Optional(float)
    ft_axis_1 = Optional(float)
    ft_axis_2 = Optional(float)
    ft_axis_3 = Optional(float)
    ft_axis_4 = Optional(float)
    st_axis_1 = Optional(float)
    st_axis_2 = Optional(float)
    st_axis_3 = Optional(float)
    st_axis_4 = Optional(float)
    truck2_weight = Optional(float, nullable=True)
    truck_diff = Optional(float)
    side_diff = Optional(float)
    offset_lengthwise = Optional(float)
    cross_offset = Optional(float)
    speed = Optional(int, nullable=True)
    sender = Optional(str)
    reciever = Optional(str)
    transporter = Optional(str)
    type = Optional(str)
    departure_point = Optional(str)
    destination_point = Optional(str)
    cargo = Optional(str)
    user = Optional(int)
    axels_count = Optional(int)
    photo_path = Optional(str)
    train_number = Optional(int, nullable=True)
    overload = Optional(int)
    direction = Optional(bool)
    wagon_type = Optional(str)
    optional1 = Optional(str, nullable=True)
    optional2 = Optional(str, nullable=True)
    optional3 = Optional(str, nullable=True)
    optional4 = Optional(str, nullable=True)
    optional5 = Optional(str, nullable=True)
    autofilling = Optional(bool, nullable=True)
    weight_type = Optional(str)
    lastdateedited = Optional(date, nullable=True)
    lasttimeedited = Optional(time, nullable=True)
    lasttimeeditor = Optional(int, nullable=True)


class Events(db.Entity):
    id = PrimaryKey(int, auto=True)
    date = Optional(date)
    time = Optional(time)
    source = Optional(str)
    name = Optional(str)
    user = Optional(str)
    details = Optional(str, nullable=True)


class System_events(db.Entity):
    id = PrimaryKey(int, auto=True)
    date = Optional(date)
    time = Optional(time)
    exeption = Optional(str)
    method = Optional(str)


class Cameras(db.Entity):
    id = PrimaryKey(int, auto=True)
    name = Optional(str)
    login = Optional(str)
    password = Optional(str)
    ip = Optional(str)


class Optional_names(db.Entity):
    id = PrimaryKey(int, auto=True)
    name = Optional(str)


class Settings(db.Entity):
    id = PrimaryKey(int, auto=True)
    language = Optional(str)
    gmt = Optional(int)
    static = Optional(bool)
    dynamic = Optional(bool)
    load = Optional(bool)
    weighing = Optional(bool)
    tablo = Optional(bool)
    adcs = Optional(int)
    block_time = Optional(datetime)
    rfid = Optional(bool)
    one_c = Optional(bool)
    etran = Optional(bool)


class Adcs_data(db.Entity):
    id = PrimaryKey(int, auto=True)
    adc_datetime = Optional(datetime)
    adc1 = Optional(int)
    adc2 = Optional(int)
    adc3 = Optional(int)
    adc4 = Optional(int)
    adc5 = Optional(int)
    adc6 = Optional(int)
    adc7 = Optional(int)
    adc8 = Optional(int)


class Protocol(db.Entity):
    id = PrimaryKey(int, auto=True)
    markCheckbox = Optional(bool)
    name = Optional(str)
    IP = Optional(str)
    port = Optional(int)
    data_url = Optional(str)
    type = Optional(str)
    password = Optional(str)
    jsonp = Optional(bool)
    one_c = Optional(bool)
    archive = Optional(bool)
    journal = Optional(bool)
    o_table = Optional(bool)


class Verification_archive(db.Entity):
    id = PrimaryKey(int, auto=True)
    verification_date = Optional(date)
    weigher_person = Optional(str)
    verification_person = Optional(str)
    owner_person = Optional(str)
    stamp = Optional(int)
    weighing_type = Optional(str)


class User(db.Entity):
    id = PrimaryKey(int, auto=True)
    user_name = Optional(str, unique=True, nullable=True)
    credentials = Optional(str)
    password = Optional(str)
    phonenumber = Optional(str)
    backup = Optional(bool)
    explore_weight_arch = Optional(bool)
    explore_logs = Optional(bool)
    printing = Optional(bool)
    adding_arch_data = Optional(bool)
    cancel_weighting = Optional(bool)
    change_arch_data = Optional(bool)
    add_user = Optional(bool)
    change_wagon_number = Optional(bool)
    locale = Optional(str)
    theme = Optional(str)
    verification = Optional(bool)
    configuration = Optional(bool)
    save_archive = Optional(bool)
    save_events = Optional(bool)
    table_configuration = Optional(bool)
    tara_control = Optional(bool)
    calibration = Optional(bool)
    update_speed = Optional(int)


class Kleimo(db.Entity):
    id = PrimaryKey(int, auto=True)
    kleimo = Optional(str)


class Serial(db.Entity):
    id = PrimaryKey(int, auto=True)
    serial = Optional(str)


class Partner(db.Entity):
    id = PrimaryKey(int, auto=True)
    name = Optional(str)
    credentials1 = Optional(str)
    credentials2 = Optional(str)


class Cargo_name(db.Entity):
    id = PrimaryKey(int, auto=True)
    name = Optional(str)


class CargoName_name(db.Entity):
    id = PrimaryKey(int, auto=True)
    name = Optional(str)


class Destination_name(db.Entity):
    id = PrimaryKey(int, auto=True)
    name = Optional(str)


class Operation_table_static_truck(db.Entity):
    id = PrimaryKey(int, auto=False)
    write_date = Optional(date)
    write_time = Optional(time)
    wagon_number = Optional(int, nullable=True)
    start_weight = Optional(float)
    doc_start_weight = Optional(float, nullable=True)
    brutto = Optional(float)
    cargo_weight = Optional(float)
    doc_cargo_weight = Optional(float)
    doc_number = Optional(str)
    doc_date = Optional(date, nullable=True)
    cargo_name = Optional(str)
    capacity = Optional(int)
    truck1_weight = Optional(float)
    truck2_weight = Optional(float)
    truck_diff = Optional(float)
    side_diff = Optional(float)
    offset_lengthwise = Optional(float)
    cross_offset = Optional(float)
    sender = Optional(str)
    reciever = Optional(str)
    transporter = Optional(str)
    type = Optional(str)
    departure_point = Optional(str)
    destination_point = Optional(str)
    cargo = Optional(str)
    user = Optional(int)
    overload = Optional(int)
    axels_count = Optional(int)
    photo_path = Optional(str)
    train_number = Optional(int)
    wagon_type = Optional(str)
    optional1 = Optional(str)
    optional2 = Optional(str)
    optional3 = Optional(str)
    optional4 = Optional(str)
    optional5 = Optional(str)
    autofilling = Optional(bool)
    lastdateedited = Optional(date)
    lasttimeedited = Optional(time)
    lasttimeeditor = Optional(int)


class Operation_table_static_wagon(db.Entity):
    id = PrimaryKey(int, auto=False)
    write_date = Optional(date)
    write_time = Optional(time)
    wagon_number = Optional(int, nullable=True)
    start_weight = Optional(float)
    doc_start_weight = Optional(float, nullable=True)
    brutto = Optional(float)
    cargo_weight = Optional(float)
    doc_cargo_weight = Optional(float)
    doc_number = Optional(str)
    doc_date = Optional(date, nullable=True)
    cargo_name = Optional(str)
    capacity = Optional(int)
    truck1_weight = Optional(float)
    truck2_weight = Optional(float)
    truck_diff = Optional(float)
    side_diff = Optional(float)
    offset_lengthwise = Optional(float)
    cross_offset = Optional(float)
    sender = Optional(str)
    reciever = Optional(str)
    transporter = Optional(str)
    type = Optional(str)
    departure_point = Optional(str)
    destination_point = Optional(str)
    cargo = Optional(str)
    user = Optional(int)
    overload = Optional(int)
    axels_count = Optional(int)
    photo_path = Optional(str)
    train_number = Optional(int)
    wagon_type = Optional(str)
    optional1 = Optional(str)
    optional2 = Optional(str)
    optional3 = Optional(str)
    optional4 = Optional(str)
    optional5 = Optional(str)
    autofilling = Optional(bool)
    lastdateedited = Optional(date)
    lasttimeedited = Optional(time)
    lasttimeeditor = Optional(int)


class Operation_table_dynamic(db.Entity):
    id = PrimaryKey(int, auto=False)
    write_date = Optional(date)
    write_time = Optional(time)
    direction = Optional(bool)
    wagon_number = Optional(int, nullable=True)
    start_weight = Optional(float)
    doc_start_weight = Optional(float, nullable=True)
    brutto = Optional(float)
    cargo_weight = Optional(float)
    doc_cargo_weight = Optional(float)
    doc_number = Optional(str)
    doc_date = Optional(date, nullable=True)
    cargo_name = Optional(str)
    capacity = Optional(int)
    truck1_weight = Optional(float)
    ft_axis_1 = Optional(float)
    ft_axis_2 = Optional(float)
    ft_axis_3 = Optional(float)
    ft_axis_4 = Optional(float)
    st_axis_1 = Optional(float)
    st_axis_2 = Optional(float)
    st_axis_3 = Optional(float)
    st_axis_4 = Optional(float)
    truck2_weight = Optional(float)
    truck_diff = Optional(float)
    side_diff = Optional(float)
    offset_lengthwise = Optional(float)
    cross_offset = Optional(float)
    speed = Optional(int)
    sender = Optional(str)
    reciever = Optional(str)
    transporter = Optional(str)
    type = Optional(str)
    departure_point = Optional(str)
    destination_point = Optional(str)
    cargo = Optional(str)
    user = Optional(int)
    overload = Optional(int)
    axels_count = Optional(int)
    photo_path = Optional(str)
    train_number = Optional(int)
    wagon_type = Optional(str)
    direction = Optional(bool)
    optional1 = Optional(str)
    optional2 = Optional(str)
    optional3 = Optional(str)
    optional4 = Optional(str)
    optional5 = Optional(str)
    autofilling = Optional(bool)
    lastdateedited = Optional(date)
    lasttimeedited = Optional(time)
    lasttimeeditor = Optional(int)


class Adcs_settings(db.Entity):
    id = PrimaryKey(int, auto=True)
    INV = Optional(bool)
    ADCCH = Optional(int)
    OFFSET = Optional(int)


class Strange_table(db.Entity):
    id = PrimaryKey(int, auto=True)
    TYPVES = Optional(str)
    NPV = Optional(int)
    DISCR = Optional(int)
    NOMSI = Optional(str)
    PREC = Optional(str)
    PONAME = Optional(str)
    POID = Optional(str)
    POVER = Optional(str)
    POMD5 = Optional(str)
    ORGANIZ = Optional(str)
    NOMVES = Optional(int)
    TELWAG = Optional(bool)
    CTMAXX = Optional(int)
    CTMAXY = Optional(int)
    WMAX = Optional(int)
    WTHR = Optional(int)
    PERIOD = Optional(int)
    TABLUSE = Optional(bool)
    GOST = Optional(bool)
    LASTPOV = Optional(str)
    GOSPOV = Optional(str)
    PREDPRED = Optional(str)
    PREDZVO = Optional(str)
    COMPTT = Optional(str)
    SPEEDT = Optional(str)
    DYN = Optional(bool)
    KKORR = Optional(str)
    W_THRES = Optional(int)
    Z_LEVEL = Optional(int)
    CALMTIME = Optional(int)
    L_PLAT = Optional(int)
    COMPT = Optional(str)
    SPEED = Optional(int)
    BRW = Optional(int)
    BRH = Optional(int)
    BRB = Optional(int)
    PROGSTAT = Optional(int)
    CURRSOST = Optional(int)
    CURRWAG = Optional(int)
    DISCR1 = Optional(int)
    DISCR_THRES = Optional(int)
    right_platform = Optional(bool)


class Cal_points1(db.Entity):
    id = PrimaryKey(int, auto=False)
    weight = Optional(int)


class Cal_points2(db.Entity):
    id = PrimaryKey(int, auto=False)
    weight = Optional(int)


class Cal_table0(db.Entity):
    id = PrimaryKey(int, auto=False)
    OFFSET = Optional(int)
    MASS = Optional(int)
    CODE = Optional(int)


class Cal_table1(db.Entity):
    id = PrimaryKey(int, auto=False)
    OFFSET = Optional(int)
    MASS = Optional(int)
    CODE = Optional(int)


class Cal_table2(db.Entity):
    id = PrimaryKey(int, auto=False)
    OFFSET = Optional(int)
    MASS = Optional(int)
    CODE = Optional(int)


class Cal_table3(db.Entity):
    id = PrimaryKey(int, auto=False)
    OFFSET = Optional(int)
    MASS = Optional(int)
    CODE = Optional(int)


class Cal_table4(db.Entity):
    id = PrimaryKey(int, auto=False)
    OFFSET = Optional(int)
    MASS = Optional(int)
    CODE = Optional(int)


class Cal_table5(db.Entity):
    id = PrimaryKey(int, auto=False)
    OFFSET = Optional(int)
    MASS = Optional(int)
    CODE = Optional(int)


class Cal_table6(db.Entity):
    id = PrimaryKey(int, auto=False)
    OFFSET = Optional(int)
    MASS = Optional(int)
    CODE = Optional(int)


class Cal_table7(db.Entity):
    id = PrimaryKey(int, auto=False)
    OFFSET = Optional(int)
    MASS = Optional(int)
    CODE = Optional(int)


class Hid_options_static_truck(db.Entity):
    id = PrimaryKey(int, auto=True)
    user = Optional(int)
    row_id = Optional(int)
    write_date = Optional(int)
    write_time = Optional(int)
    direction = Optional(int)
    overload = Optional(int)
    wagon_number = Optional(int)
    start_weight = Optional(int)
    doc_start_weight = Optional(int)
    brutto = Optional(int)
    cargo_weight = Optional(int)
    doc_cargo_weight = Optional(int)
    doc_number = Optional(int)
    doc_date = Optional(int)
    cargo_name = Optional(int)
    capacity = Optional(int)
    truck1_weight = Optional(int)
    truck2_weight = Optional(int)
    truck_diff = Optional(int)
    side_diff = Optional(int)
    offset_lengthwise = Optional(int)
    cross_offset = Optional(int)
    speed = Optional(int)
    sender = Optional(int)
    reciever = Optional(int)
    transporter = Optional(int)
    departure_point = Optional(int)
    destination_point = Optional(int)
    cargo = Optional(int)
    axels_count = Optional(int)
    photo_path = Optional(int)
    train_number = Optional(int)
    wagon_type = Optional(int)
    optional1 = Optional(int)
    optional2 = Optional(int)
    optional3 = Optional(int)
    optional4 = Optional(int)
    optional5 = Optional(int)
    autofilling = Optional(int)
    lastdateedited = Optional(int)
    lasttimeedited = Optional(int)
    lasttimeeditor = Optional(int)


class Hid_options_static_wagon(db.Entity):
    id = PrimaryKey(int, auto=True)
    user = Optional(int)
    row_id = Optional(int)
    write_date = Optional(int)
    write_time = Optional(int)
    direction = Optional(int)
    overload = Optional(int)
    wagon_number = Optional(int)
    start_weight = Optional(int)
    doc_start_weight = Optional(int)
    brutto = Optional(int)
    cargo_weight = Optional(int)
    doc_cargo_weight = Optional(int)
    doc_number = Optional(int)
    doc_date = Optional(int)
    cargo_name = Optional(int)
    capacity = Optional(int)
    truck1_weight = Optional(int)
    truck2_weight = Optional(int)
    truck_diff = Optional(int)
    side_diff = Optional(int)
    offset_lengthwise = Optional(int)
    cross_offset = Optional(int)
    speed = Optional(int)
    sender = Optional(int)
    reciever = Optional(int)
    transporter = Optional(int)
    departure_point = Optional(int)
    destination_point = Optional(int)
    cargo = Optional(int)
    axels_count = Optional(int)
    photo_path = Optional(int)
    train_number = Optional(int)
    wagon_type = Optional(int)
    optional1 = Optional(int)
    optional2 = Optional(int)
    optional3 = Optional(int)
    optional4 = Optional(int)
    optional5 = Optional(int)
    autofilling = Optional(int)
    lastdateedited = Optional(int)
    lasttimeedited = Optional(int)
    lasttimeeditor = Optional(int)


class Hid_options_dynamic(db.Entity):
    id = PrimaryKey(int, auto=True)
    user = Optional(int)
    row_id = Optional(int)
    write_date = Optional(int)
    write_time = Optional(int)
    direction = Optional(int)
    overload = Optional(int)
    wagon_number = Optional(int)
    start_weight = Optional(int)
    doc_start_weight = Optional(int)
    brutto = Optional(int)
    cargo_weight = Optional(int)
    doc_cargo_weight = Optional(int)
    doc_number = Optional(int)
    doc_date = Optional(int)
    cargo_name = Optional(int)
    capacity = Optional(int)
    truck1_weight = Optional(int)
    ft_axis_1 = Optional(int)
    ft_axis_2 = Optional(int)
    ft_axis_3 = Optional(int)
    ft_axis_4 = Optional(int)
    st_axis_1 = Optional(int)
    st_axis_2 = Optional(int)
    st_axis_3 = Optional(int)
    st_axis_4 = Optional(int)
    truck2_weight = Optional(int)
    truck_diff = Optional(int)
    side_diff = Optional(int)
    offset_lengthwise = Optional(int)
    cross_offset = Optional(int)
    speed = Optional(int)
    sender = Optional(int)
    reciever = Optional(int)
    transporter = Optional(int)
    departure_point = Optional(int)
    destination_point = Optional(int)
    cargo = Optional(int)
    axels_count = Optional(int)
    photo_path = Optional(int)
    train_number = Optional(int)
    wagon_type = Optional(int)
    optional1 = Optional(int)
    optional2 = Optional(int)
    optional3 = Optional(int)
    optional4 = Optional(int)
    optional5 = Optional(int)
    autofilling = Optional(int)
    lastdateedited = Optional(int)
    lasttimeedited = Optional(int)
    lasttimeeditor = Optional(int)


class Hid_options_archive(db.Entity):
    id = PrimaryKey(int, auto=True)
    user = Optional(int)
    row_id = Optional(int)
    write_date = Optional(int)
    write_time = Optional(int)
    overload = Optional(int)
    direction = Optional(int)
    wagon_number = Optional(int)
    start_weight = Optional(int)
    doc_start_weight = Optional(int)
    brutto = Optional(int)
    cargo_weight = Optional(int)
    doc_cargo_weight = Optional(int)
    doc_number = Optional(int)
    doc_date = Optional(int)
    cargo_name = Optional(int)
    capacity = Optional(int)
    truck1_weight = Optional(int)
    ft_axis_1 = Optional(int)
    ft_axis_2 = Optional(int)
    ft_axis_3 = Optional(int)
    ft_axis_4 = Optional(int)
    st_axis_1 = Optional(int)
    st_axis_2 = Optional(int)
    st_axis_3 = Optional(int)
    st_axis_4 = Optional(int)
    truck2_weight = Optional(int)
    truck_diff = Optional(int)
    side_diff = Optional(int)
    offset_lengthwise = Optional(int)
    cross_offset = Optional(int)
    speed = Optional(int)
    sender = Optional(int)
    reciever = Optional(int)
    transporter = Optional(int)
    departure_point = Optional(int)
    destination_point = Optional(int)
    cargo = Optional(int)
    axels_count = Optional(int)
    photo_path = Optional(int)
    train_number = Optional(int)
    wagon_type = Optional(int)
    optional1 = Optional(int)
    optional2 = Optional(int)
    optional3 = Optional(int)
    optional4 = Optional(int)
    optional5 = Optional(int)
    autofilling = Optional(int)
    weight_type = Optional(int)
    lastdateedited = Optional(int)
    lasttimeedited = Optional(int)
    lasttimeeditor = Optional(int)


class Global_settings(db.Entity):
    id = PrimaryKey(int, auto=True)
    static_wagon = Optional(bool)
    dynamic = Optional(bool)
    recognition = Optional(bool)
    dosing = Optional(bool)
    rfid = Optional(bool)
    one_c = Optional(bool)
    blockinTime = Optional(date)
    weigherNumber = Optional(str)
    organizationName = Optional(str)


class Keys(db.Entity):
    id = PrimaryKey(int, auto=True)
    key = Optional(str)
    static_wagon = Optional(bool, sql_default=False, default=False)
    dynamic = Optional(bool, sql_default=False, default=False)
    recognition = Optional(bool, sql_default=False, default=False)
    dosing = Optional(bool, sql_default=False, default=False)
    rfid = Optional(bool, sql_default=False, default=False)
    one_c = Optional(bool, sql_default=False, default=False)


class Report_settings(db.Entity):
    id = PrimaryKey(int, auto=True)
    count = Optional(int)
    markCheckbox = Optional(bool)
    name = Optional(str)
    orientation = Optional(str)
    statical = Optional(bool)
    one_wagon = Optional(bool)


class Report_columns(db.Entity):
    id = PrimaryKey(int, auto=False)
    user = Optional(int)
    row_id = Optional(int)
    write_date = Optional(int)
    write_time = Optional(int)
    direction = Optional(int)
    wagon_number = Optional(int)
    start_weight = Optional(int)
    doc_start_weight = Optional(int)
    brutto = Optional(int)
    cargo_weight = Optional(int)
    overload = Optional(int)
    doc_cargo_weight = Optional(int)
    doc_number = Optional(int)
    doc_date = Optional(int)
    cargo_name = Optional(int)
    capacity = Optional(int)
    truck1_weight = Optional(int)
    ft_axis_1 = Optional(int)
    ft_axis_2 = Optional(int)
    ft_axis_3 = Optional(int)
    ft_axis_4 = Optional(int)
    st_axis_1 = Optional(int)
    st_axis_2 = Optional(int)
    st_axis_3 = Optional(int)
    st_axis_4 = Optional(int)
    truck2_weight = Optional(int)
    truck_diff = Optional(int)
    side_diff = Optional(int)
    offset_lengthwise = Optional(int)
    cross_offset = Optional(int)
    speed = Optional(int)
    sender = Optional(int)
    reciever = Optional(int)
    transporter = Optional(int)
    departure_point = Optional(int)
    destination_point = Optional(int)
    cargo = Optional(int)
    axels_count = Optional(int)
    photo_path = Optional(int)
    train_number = Optional(int)
    wagon_type = Optional(int)
    optional1 = Optional(int)
    optional2 = Optional(int)
    optional3 = Optional(int)
    optional4 = Optional(int)
    optional5 = Optional(int)
    type = Optional(int)
    autofilling = Optional(int)
    weight_type = Optional(int)
    lastdateedited = Optional(int)
    lasttimeedited = Optional(int)
    lasttimeeditor = Optional(int)


class Contractor(db.Entity):
    id = PrimaryKey(int, auto=True)
    shortName = Optional(str)
    fullName = Optional(str, nullable=True)
    inn = Optional(int, nullable=True)
    kpp = Optional(int, nullable=True)
    address = Optional(str, nullable=True)


class Hardware(db.Entity):
    id = PrimaryKey(int, auto=True)
    rfid = Optional(bool)
    lights_com_port = Optional(str)
    lights_baud_rate = Optional(str)
    dosator = Optional(bool)
    drivers = Optional(bool)
    drivers_type = Optional(str)


class HardwareInfo(db.Entity):
    id = PrimaryKey(int, auto=True)
    weight_type = Optional(str)
    nomersi = Optional(str)
    accuracy = Optional(str)
    weight_number = Optional(str)
